#!/bin/bash

echo "=== نصب پنل مانیتورینگ شبکه و سیستم لورنا روی اوبونتو 22.04 ==="
echo "1) نصب و اجرای پنل"
echo "2) حذف پنل"
read -p "گزینه مورد نظر را وارد کنید (1 یا 2): " CHOICE

APP_DIR="/opt/network_monitor"
VENV_DIR="$APP_DIR/venv"
APP_PORT=5000
USER="admin"
PASS="admin123"
LICENSE_FILE="$APP_DIR/license.key"

# تابع برای تولید کد لایسنس
generate_license() {
    echo "lorna-$(openssl rand -hex 12)" > "$LICENSE_FILE"
    echo "کد لایسنس تولید شد: $(cat $LICENSE_FILE)"
}

if [ "$CHOICE" == "1" ]; then
    echo "در حال نصب پیش‌نیازها..."
    apt update && apt install -y python3 python3-venv python3-pip vnstat

    # ایجاد دایرکتوری برنامه
    mkdir -p "$APP_DIR"
    
    # ساخت محیط مجازی پایتون
    python3 -m venv "$VENV_DIR"
    source "$VENV_DIR/bin/activate"

    # نصب پیش‌نیازهای پایتون
    pip install flask psutil

    # تولید کد لایسنس
    generate_license

    # ایجاد فایل برنامه Flask
    cat > "$APP_DIR/app.py" << 'EOF'
from flask import Flask, render_template_string, request, redirect, url_for, session, jsonify
import psutil
import subprocess
import os
import json

app = Flask(__name__)
app.secret_key = 'super_secret_key_lorna'

USERNAME = "admin"
PASSWORD = "admin123"
LICENSE_FILE = "/opt/network_monitor/license.key"

def verify_license(license_key):
    if not os.path.exists(LICENSE_FILE):
        return False
    with open(LICENSE_FILE, 'r') as f:
        stored_license = f.read().strip()
    return license_key.strip() == stored_license

login_page = '''
<!DOCTYPE html>
<html lang="fa">
<head><meta charset="UTF-8"><title>ورود به پنل لورنا</title></head>
<body>
<h2>ورود به پنل لورنا</h2>
{% if error %}<p style="color:red;">{{ error }}</p>{% endif %}
<form method="POST">
  <label>نام کاربری:</label><br>
  <input type="text" name="username" required><br><br>
  <label>رمز عبور:</label><br>
  <input type="password" name="password" required><br><br>
  <label>کد لایسنس:</label><br>
  <input type="text" name="license" required><br><br>
  <button type="submit">ورود</button>
</form>
</body>
</html>
'''

dashboard_page = '''
<!DOCTYPE html>
<html lang="fa">
<head><meta charset="UTF-8"><title>داشبورد مانیتورینگ لورنا</title></head>
<body>
<a href="{{ url_for('logout') }}">خروج</a>
<h2>داشبورد مانیتورینگ لورنا</h2>
{% if not license_ok %}
  <h3>لطفاً کد لایسنس معتبر وارد کنید:</h3>
  {% if error %}<p style="color:red;">{{ error }}</p>{% endif %}
  <form method="POST" action="{{ url_for('set_license') }}">
    <input type="text" name="license" placeholder="کد لایسنس" required>
    <button type="submit">ثبت</button>
  </form>
{% else %}
  <h3>مصرف CPU: {{ cpu }}%</h3>
  <h3>مصرف RAM: {{ ram }}%</h3>
  <h3>ترافیک شبکه: آپلود {{ net['upload'] }} MB | دانلود {{ net['download'] }} MB</h3>
{% endif %}
</body>
</html>
'''

def get_network_usage():
    try:
        result = subprocess.check_output("vnstat --json", shell=True).decode()
        data = json.loads(result)
        rx_bytes = data['interfaces'][0]['traffic']['day'][0]['rx'] * 1024
        tx_bytes = data['interfaces'][0]['traffic']['day'][0]['tx'] * 1024
        return {'upload': round(tx_bytes / (1024*1024), 2), 'download': round(rx_bytes / (1024*1024), 2)}
    except Exception:
        return {'upload': 0, 'download': 0}

@app.route('/', methods=['GET', 'POST'])
def login():
    if 'logged_in' in session:
        return redirect(url_for('dashboard'))
    error = None
    if request.method == 'POST':
        username = request.form['username']
        password = request.form['password']
        license_key = request.form['license']
        if username == USERNAME and password == PASSWORD:
            session['logged_in'] = True
            session['license_ok'] = verify_license(license_key)
            return redirect(url_for('dashboard'))
        else:
            error = 'نام کاربری یا رمز عبور اشتباه است'
    return render_template_string(login_page, error=error)

@app.route('/dashboard')
def dashboard():
    if 'logged_in' not in session:
        return redirect(url_for('login'))
    cpu_percent = psutil.cpu_percent(interval=1)
    ram_percent = psutil.virtual_memory().percent
    net = get_network_usage()
    return render_template_string(dashboard_page,
                                  cpu=cpu_percent,
                                  ram=ram_percent,
                                  net=net,
                                  license_ok=session.get('license_ok', False),
                                  error=None)

@app.route('/set_license', methods=['POST'])
def set_license():
    if 'logged_in' not in session:
        return redirect(url_for('login'))
    license_key = request.form['license']
    if verify_license(license_key):
        session['license_ok'] = True
        return redirect(url_for('dashboard'))
    else:
        cpu_percent = psutil.cpu_percent(interval=1)
        ram_percent = psutil.virtual_memory().percent
        net = get_network_usage()
        return render_template_string(dashboard_page,
                                      cpu=cpu_percent,
                                      ram=ram_percent,
                                      net=net,
                                      license_ok=False,
                                      error="کد لایسنس نامعتبر است")

@app.route('/logout')
def logout():
    session.clear()
    return redirect(url_for('login'))

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000)
EOF

    echo "پنل نصب شد. کد لایسنس در $LICENSE_FILE ذخیره شده است."
    echo "برای اجرای پنل دستور زیر را اجرا کنید:"
    echo "source $VENV_DIR/bin/activate && python $APP_DIR/app.py"
    echo "سپس مرورگر را باز کرده و به آدرس http://IP-Server:$APP_PORT بروید."
    echo "کد لایسنس: $(cat $LICENSE_FILE)"

elif [ "$CHOICE" == "2" ]; then
    echo "در حال حذف پنل..."
    pkill -f "$APP_DIR/app.py"
    rm -rf "$APP_DIR"
    echo "حذف انجام شد."
else
    echo "گزینه نامعتبر!"
fi
