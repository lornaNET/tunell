#!/bin/bash

echo "=== نصب پنل مانیتورینگ شبکه و سیستم با Flask روی اوبونتو 22.04 ==="
echo "1) نصب و اجرای پنل"
echo "2) حذف پنل"
read -p "گزینه مورد نظر را وارد کنید (1 یا 2): " CHOICE

APP_DIR="/opt/network_monitor"
VENV_DIR="$APP_DIR/venv"
APP_PORT=5000
USER="admin"
PASS="admin123"

if [ "$CHOICE" == "1" ]; then
    echo "در حال نصب پیش‌نیازها..."
    apt update && apt install -y python3 python3-venv python3-pip vnstat

    # ایجاد دایرکتوری برنامه
    mkdir -p "$APP_DIR"
    
    # ساخت محیط مجازی پایتون
    python3 -m venv "$VENV_DIR"
    source "$VENV_DIR/bin/activate"

    # نصب Flask و psutil برای دریافت اطلاعات سیستم
    pip install flask psutil

    # ایجاد فایل برنامه Flask
    cat > "$APP_DIR/app.py" << 'EOF'
from flask import Flask, render_template_string, request, redirect, url_for, session
import psutil
import subprocess

app = Flask(__name__)
app.secret_key = 'secret_key_here'  # برای سشن‌ها، اینو تغییر بده

# یوزر و پسورد ثابت
USERNAME = "admin"
PASSWORD = "admin123"

login_page = '''
<!DOCTYPE html>
<html lang="fa">
<head>
<meta charset="UTF-8">
<title>ورود به پنل لورنا</title>
<style>
    body {
        font-family: Tahoma, sans-serif;
        direction: rtl;
        background: linear-gradient(135deg, #1f2937, #111827);
        color: #e0e7ff;
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        margin: 0;
    }
    .container {
        background: #374151;
        padding: 30px 40px;
        border-radius: 12px;
        box-shadow: 0 0 15px rgba(59, 130, 246, 0.7);
        width: 320px;
        text-align: center;
    }
    h2 {
        margin-bottom: 25px;
        font-weight: 700;
        font-size: 26px;
        color: #60a5fa;
    }
    input[type=text], input[type=password] {
        width: 100%;
        padding: 12px 15px;
        margin: 12px 0 18px 0;
        border: none;
        border-radius: 8px;
        font-size: 16px;
        background: #1f2937;
        color: #e0e7ff;
        box-sizing: border-box;
        transition: background 0.3s ease;
    }
    input[type=text]:focus, input[type=password]:focus {
        background: #111827;
        outline: none;
    }
    button {
        width: 100%;
        padding: 14px;
        background: #2563eb;
        border: none;
        border-radius: 8px;
        color: white;
        font-size: 18px;
        font-weight: 600;
        cursor: pointer;
        transition: background 0.3s ease;
    }
    button:hover {
        background: #1e40af;
    }
    .error {
        color: #f87171;
        margin-bottom: 15px;
        font-weight: 600;
    }
</style>
</head>
<body>
<div class="container">
<h2>ورود به پنل لورنا</h2>
{% if error %}<p class="error">{{ error }}</p>{% endif %}
<form method="post">
<input type="text" name="username" placeholder="نام کاربری" required>
<input type="password" name="password" placeholder="رمز عبور" required>
<button type="submit">ورود</button>
</form>
</div>
</body>
</html>
'''

dashboard_page = '''
<!DOCTYPE html>
<html lang="fa">
<head>
<meta charset="UTF-8" />
<title>داشبورد مانیتورینگ لورنا</title>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<style>
    body {
        font-family: Tahoma, sans-serif;
        direction: rtl;
        background: #0f172a;
        color: #f1f5f9;
        margin: 20px;
    }
    h1 {
        text-align: center;
        color: #60a5fa;
        font-size: 32px;
        margin-bottom: 30px;
        text-shadow: 0 0 10px #3b82f6;
    }
    .container {
        max-width: 900px;
        margin: auto;
    }
    .logout {
        float: left;
        margin-bottom: 20px;
        color: #f87171;
        font-weight: 700;
        text-decoration: none;
        background: #1e293b;
        padding: 8px 15px;
        border-radius: 8px;
        transition: background 0.3s ease;
    }
    .logout:hover {
        background: #ef4444;
        color: white;
    }
    .chart-container {
        background: #1e293b;
        padding: 25px;
        border-radius: 14px;
        margin-bottom: 35px;
        box-shadow: 0 0 20px rgba(59, 130, 246, 0.6);
    }
    h3 {
        margin-bottom: 15px;
        color: #93c5fd;
        text-shadow: 0 0 6px #2563eb;
    }
</style>
</head>
<body>
<div class="container">
<a href="{{ url_for('logout') }}" class="logout">خروج</a>
<h1>داشبورد مانیتورینگ لورنا</h1>

<div class="chart-container">
<h3>مصرف CPU</h3>
<canvas id="cpuChart"></canvas>
</div>

<div class="chart-container">
<h3>مصرف RAM</h3>
<canvas id="ramChart"></canvas>
</div>

<div class="chart-container">
<h3>ترافیک شبکه (آپلود و دانلود)</h3>
<canvas id="netChart"></canvas>
</div>
</div>

<script>
const cpuData = {{ cpu }};
const ramData = {{ ram }};
const netData = {{ net }};

// نمودار CPU
const cpuCtx = document.getElementById('cpuChart').getContext('2d');
const cpuChart = new Chart(cpuCtx, {
    type: 'doughnut',
    data: {
        labels: ['مصرف شده', 'باقی‌مانده'],
        datasets: [{
            data: [cpuData, 100 - cpuData],
            backgroundColor: ['#ef4444', '#3b82f6'],
            hoverOffset: 30,
        }]
    },
    options: {responsive: true, cutout: '75%'}
});

// نمودار RAM
const ramCtx = document.getElementById('ramChart').getContext('2d');
const ramChart = new Chart(ramCtx, {
    type: 'doughnut',
    data: {
        labels: ['مصرف شده', 'باقی‌مانده'],
        datasets: [{
            data: [ramData, 100 - ramData],
            backgroundColor: ['#facc15', '#14b8a6'],
            hoverOffset: 30,
        }]
    },
    options: {responsive: true, cutout: '75%'}
});

// نمودار شبکه
const netCtx = document.getElementById('netChart').getContext('2d');
const netChart = new Chart(netCtx, {
    type: 'bar',
    data: {
        labels: ['آپلود', 'دانلود'],
        datasets: [{
            label: 'مگابایت',
            data: [netData.upload, netData.download],
            backgroundColor: ['#3b82f6', '#ef4444'],
            borderRadius: 6,
        }]
    },
    options: {
        responsive: true,
        scales: {
            y: {
                beginAtZero: true,
                grid: {
                    color: '#334155'
                },
                ticks: {
                    color: '#cbd5e1',
                    font: { size: 14 }
                }
            },
            x: {
                grid: {
                    display: false
                },
                ticks: {
                    color: '#cbd5e1',
                    font: { size: 14 }
                }
            }
        }
    }
});
</script>
</body>
</html>
'''

def get_network_usage():
    try:
        result = subprocess.check_output("vnstat --json", shell=True).decode()
        import json
        data = json.loads(result)
        rx_bytes = data['interfaces'][0]['traffic']['day'][0]['rx'] * 1024
        tx_bytes = data['interfaces'][0]['traffic']['day'][0]['tx'] * 1024
        return {'upload': round(tx_bytes / (1024*1024), 2), 'download': round(rx_bytes / (1024*1024), 2)}
    except Exception:
        return {'upload': 0, 'download': 0}

@app.route('/', methods=['GET', 'POST'])
def login():
    if 'logged_in' in session:
        return redirect(url_for('dashboard'))
    error = None
    if request.method == 'POST':
        username = request.form['username']
        password = request.form['password']
        if username == USERNAME and password == PASSWORD:
            session['logged_in'] = True
            return redirect(url_for('dashboard'))
        else:
            error = 'نام کاربری یا رمز عبور اشتباه است'
    return render_template_string(login_page, error=error)

@app.route('/dashboard')
def dashboard():
    if 'logged_in' not in session:
        return redirect(url_for('login'))

    cpu_percent = psutil.cpu_percent(interval=1)
    ram = psutil.virtual_memory()
    ram_percent = ram.percent
    net = get_network_usage()

    return render_template_string(dashboard_page, cpu=cpu_percent, ram=ram_percent, net=net)

@app.route('/logout')
def logout():
    session.pop('logged_in', None)
    return redirect(url_for('login'))

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000)
EOF

    echo "پنل نصب شد. برای اجرای پنل دستور زیر را بزنید:"
    echo "source $VENV_DIR/bin/activate && python $APP_DIR/app.py"
    echo "سپس مرورگر را باز کرده و به آدرس http://IP-Server:$APP_PORT بروید."

elif [ "$CHOICE" == "2" ]; then
    echo "در حال حذف پنل..."
    pkill -f "$APP_DIR/app.py"
    rm -rf "$APP_DIR"
    echo "حذف انجام شد."
else
    echo "گزینه نامعتبر!"
fi
