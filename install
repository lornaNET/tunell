#!/bin/bash

echo "=== نصب پنل مانیتورینگ لورنا روی اوبونتو 22.04 ==="
echo "1) نصب و اجرای پنل"
echo "2) حذف پنل"
read -p "گزینه مورد نظر را وارد کنید (1 یا 2): " CHOICE

APP_DIR="/opt/network_monitor"
VENV_DIR="$APP_DIR/venv"
APP_PORT=5000
USER="admin"
PASS="admin123"
LICENSE_FILE="$APP_DIR/license.key"

if [ "$CHOICE" == "1" ]; then
    echo "در حال نصب پیش‌نیازها..."
    apt update && apt install -y python3 python3-venv python3-pip vnstat curl

    mkdir -p "$APP_DIR"
    echo "lorna" > "$LICENSE_FILE"

    python3 -m venv "$VENV_DIR"
    source "$VENV_DIR/bin/activate"
    pip install flask psutil

cat > "$APP_DIR/app.py" << 'EOF'
from flask import Flask, render_template_string, request, redirect, url_for, session, jsonify
import psutil, subprocess, os, json

app = Flask(__name__)
app.secret_key = 'super_secret_key_lorna'

USERNAME = "admin"
PASSWORD = "admin123"
LICENSE_FILE = "/opt/network_monitor/license.key"

def verify_license(license_key):
    if not os.path.exists(LICENSE_FILE):
        return False
    return license_key.strip() == open(LICENSE_FILE).read().strip()

login_page = '''
<!DOCTYPE html>
<html lang="fa">
<head>
<meta charset="UTF-8">
<title>ورود به پنل لورنا</title>
<style>
body { font-family: sans-serif; background: linear-gradient(135deg,#0f172a,#1e293b); color: #fff; display:flex;justify-content:center;align-items:center;height:100vh; }
.login-box { background: rgba(255,255,255,0.08); padding: 30px; border-radius: 15px; width:300px; text-align:center; }
.login-box input { width: 100%; padding:10px; margin:10px 0; border:none; border-radius:8px; }
.login-box button { padding:10px; width:100%; background:#06b6d4; border:none; color:white; border-radius:8px; cursor:pointer; }
.login-box button:hover { background:#0891b2; }
</style>
</head>
<body>
<div class="login-box">
<h2>پنل لورنا</h2>
{% if error %}<p style="color:red;">{{ error }}</p>{% endif %}
<form method="POST">
<input type="text" name="username" placeholder="نام کاربری" required>
<input type="password" name="password" placeholder="رمز عبور" required>
<input type="text" name="license" placeholder="کد لایسنس" required>
<button type="submit">ورود</button>
</form>
</div>
</body>
</html>
'''

dashboard_page = '''
<!DOCTYPE html>
<html lang="fa">
<head>
<meta charset="UTF-8">
<title>داشبورد مانیتورینگ لورنا</title>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-gauge@0.3.0/dist/chartjs-gauge.min.js"></script>
<style>
body { font-family: sans-serif; margin:0; padding:0; }
header { background:#0f172a; color:white; padding:10px; display:flex; justify-content:space-between; align-items:center; }
.container { padding:20px; display:flex; flex-wrap:wrap; gap:20px; justify-content:center; }
.card { background:#1e293b; padding:20px; border-radius:10px; text-align:center; color:white; }
.light header { background:#f8f9fa; color:#000; }
.light .card { background:white; color:black; }
.amoled header { background:black; color:#0ff; }
.amoled .card { background:black; color:#0ff; }
</style>
</head>
<body class="dark">
<header>
  <div>داشبورد لورنا</div>
  <div>
    <a href="{{ url_for('logout') }}" style="color:white;margin-right:10px;">خروج</a>
    <select id="themeSelector" onchange="changeTheme(this.value)">
      <option value="dark">تیره</option>
      <option value="light">روشن</option>
      <option value="amoled">AMOLED</option>
    </select>
  </div>
</header>

<div class="container">
{% if not license_ok %}
  <div class="card">
    <h3>کد لایسنس وارد کنید</h3>
    {% if error %}<p style="color:red;">{{ error }}</p>{% endif %}
    <form method="POST" action="{{ url_for('set_license') }}">
      <input type="text" name="license" placeholder="کد لایسنس" required>
      <button type="submit">ثبت</button>
    </form>
  </div>
{% else %}
  <div class="card"><canvas id="cpuGauge" width="180" height="180"></canvas><p>CPU</p></div>
  <div class="card"><canvas id="ramGauge" width="180" height="180"></canvas><p>RAM</p></div>
  <div class="card"><canvas id="upGauge" width="180" height="180"></canvas><p>آپلود (MB)</p></div>
  <div class="card"><canvas id="downGauge" width="180" height="180"></canvas><p>دانلود (MB)</p></div>
{% endif %}
</div>

<script>
let gauges = {};
function initGauges(){
  const opts = { type: 'gauge', data: { datasets: [{ value: 0, data: [0,100], backgroundColor: ['#06b6d4','#1e293b'] }]}, options: {responsive:true} };
  gauges.cpu = new Chart(document.getElementById('cpuGauge'), JSON.parse(JSON.stringify(opts)));
  gauges.ram = new Chart(document.getElementById('ramGauge'), JSON.parse(JSON.stringify(opts)));
  gauges.up  = new Chart(document.getElementById('upGauge'),  JSON.parse(JSON.stringify(opts)));
  gauges.down= new Chart(document.getElementById('downGauge'), JSON.parse(JSON.stringify(opts)));
}
function updateGauges(cpu, ram, up, down){
  gauges.cpu.data.datasets[0].value = cpu;
  gauges.ram.data.datasets[0].value = ram;
  gauges.up.data.datasets[0].value  = up;
  gauges.down.data.datasets[0].value= down;
  for(let g in gauges) gauges[g].update();
}
function fetchAndUpdate(){
  fetch('/get_system_data').then(r=>r.json()).then(d=>{
    updateGauges(d.cpu, d.ram, d.net.upload, d.net.download);
  });
}
function changeTheme(mode){
  document.body.className = mode;
  localStorage.setItem('theme', mode);
}
if({{ 'true' if license_ok else 'false' }}){
  initGauges();
  fetchAndUpdate();
  setInterval(fetchAndUpdate, 3000);
}
document.body.className = localStorage.getItem('theme') || 'dark';
</script>
</body>
</html>
'''

def get_network_usage():
    try:
        result = subprocess.check_output("vnstat --json", shell=True).decode()
        data = json.loads(result)
        rx_bytes = data['interfaces'][0]['traffic']['day'][0]['rx'] * 1024
        tx_bytes = data['interfaces'][0]['traffic']['day'][0]['tx'] * 1024
        return {'upload': round(tx_bytes / (1024*1024), 2), 'download': round(rx_bytes / (1024*1024), 2)}
    except Exception:
        return {'upload': 0, 'download': 0}

@app.route('/', methods=['GET', 'POST'])
def login():
    if 'logged_in' in session:
        return redirect(url_for('dashboard'))
    error = None
    if request.method == 'POST':
        if request.form['username'] == USERNAME and request.form['password'] == PASSWORD:
            session['logged_in'] = True
            session['license_ok'] = verify_license(request.form['license'])
            return redirect(url_for('dashboard'))
        else:
            error = 'نام کاربری یا رمز عبور اشتباه است'
    return render_template_string(login_page, error=error)

@app.route('/dashboard')
def dashboard():
    if 'logged_in' not in session:
        return redirect(url_for('login'))
    cpu_percent = psutil.cpu_percent(interval=1)
    ram_percent = psutil.virtual_memory().percent
    net = get_network_usage()
    return render_template_string(dashboard_page, cpu=cpu_percent, ram=ram_percent, net=net, license_ok=session.get('license_ok', False), error=None)

@app.route('/set_license', methods=['POST'])
def set_license():
    if 'logged_in' not in session:
        return redirect(url_for('login'))
    if verify_license(request.form['license']):
        session['license_ok'] = True
        return redirect(url_for('dashboard'))
    else:
        cpu_percent = psutil.cpu_percent(interval=1)
        ram_percent = psutil.virtual_memory().percent
        net = get_network_usage()
        return render_template_string(dashboard_page, cpu=cpu_percent, ram=ram_percent, net=net, license_ok=False, error="کد لایسنس نامعتبر است")

@app.route('/get_system_data')
def get_system_data():
    return jsonify({'cpu': psutil.cpu_percent(interval=1), 'ram': psutil.virtual_memory().percent, 'net': get_network_usage()})

@app.route('/logout')
def logout():
    session.clear()
    return redirect(url_for('login'))

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000)
EOF

    echo "پنل نصب شد. برای اجرا دستور زیر را بزنید:"
    echo "source $VENV_DIR/bin/activate && python $APP_DIR/app.py"

elif [ "$CHOICE" == "2" ]; then
    echo "در حال حذف..."
    pkill -f "$APP_DIR/app.py"
    rm -rf "$APP_DIR"
    echo "پاک شد."
else
    echo "گزینه نامعتبر!"
fi
